name: Documents Build

on: [push, workflow_dispatch]

# env:
#   VERSION: "${{ github.ref_name }}"

jobs:

##
## For langs that require the special fonts ( Russian, Chinese, etc.)
## The `stable-full` version of pandocker is required, you can activate
## it with the `TAG` environment variable, like this
##
## TAG=stable-full ./tools/docker/pandoc_makedocs.sh ....
##
  en:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document
      language: English
      lang: en
      version: ${{ github.ref_name }}

  de:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-de
      language: German
      lang: de
      version: ${{ github.ref_name }}

  fa:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-fa
      language: Persian
      lang: fa
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full
      pandocker-template: LATEX_TEMPLATE=default # there's a bug for fa in the eisvogel template, we have to use default

  es:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-es
      language: Spanish
      lang: es
      version: ${{ github.ref_name }}

  fr:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-fr
      language: French
      lang: fr
      version: ${{ github.ref_name }}

  hi:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-hi
      language: Hindi
      lang: hi
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full

  ja:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-ja
      language: Japanese
      lang: ja
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full

  ko:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-ko
      language: Korean
      lang: ko
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full

  ptbr:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-ptbr
      language: Brazilian Portuguese
      lang: ptbr
      version: ${{ github.ref_name }}


  ptpt:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-ptpt
      language: Portugal Portuguese
      lang: ptpt
      version: ${{ github.ref_name }}

  ru:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-ru
      language: Russian
      lang: ru
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full

  zhcn:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-zhcn
      language: Simplified Chinese
      lang: zhcn
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full

  zhtw:
    uses: OWASP/owasp-masvs/.github/workflows/doc-gen-reusable.yml@try-reusable-workflow
    with:
      folder: Document-zhtw
      language: Traditional Chinese
      lang: zhtw
      version: ${{ github.ref_name }}
      pandocker-tag: TAG=stable-full


  export:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Get previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"

    - name: Set VERSION to local job env
      run: echo "VERSION=${{ steps.previoustag.outputs.tag }}" >> $GITHUB_ENV

    - name: Install pyyaml
      run: pip3 install pyyaml

    - name: Generate CSV
      run: cd tools && python3 export.py --format csv --lang en > OWASP_MASVS-${{env.VERSION}}.csv
    - name: Generate JSON
      run: cd tools && python3 export.py --format json --lang en > OWASP_MASVS-${{env.VERSION}}.json
    - name: Generate XML
      run: cd tools && python3 export.py --format xml --lang en > OWASP_MASVS-${{env.VERSION}}.xml
    - name: Generate MASVS YAML
      run: cd tools && python3 export.py --format yaml --lang en > OWASP_MASVS-${{env.VERSION}}.yaml

    - name: Upload CSV
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${{env.VERSION}}.csv
        path: tools/OWASP_MASVS-${{env.VERSION}}.csv
    - name: Upload JSON
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${{env.VERSION}}.json
        path: tools/OWASP_MASVS-${{env.VERSION}}.json
    - name: Upload XML
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${{env.VERSION}}.xml
        path: tools/OWASP_MASVS-${{env.VERSION}}.xml
    - name: Upload YAML
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MASVS-${{env.VERSION}}.yaml
        path: tools/OWASP_MASVS-${{env.VERSION}}.yaml

  release:
    runs-on: ubuntu-latest
    needs: [en, de, fa, es, fr, hi, ja, ko, ptbr, ptpt, ru, zhcn, zhtw, export]
    if: startsWith(github.ref, 'refs/tags/') && (github.actor == 'cpholguera' || github.actor == 'sushi2k')
    steps:
      - uses: actions/download-artifact@v2

      - name: Move all translations (pdf, epub and docx) to root
        run: mv OWASP_MASVS-*-*/* .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          draft: true
          generate_release_notes: true
          discussion_category_name: Announcements
          files: |
            OWASP_MASVS-*.pdf
            OWASP_MASVS-*.epub
            OWASP_MASVS-*.docx
            OWASP_MASVS-*.csv/OWASP_MASVS-*.csv
            OWASP_MASVS-*.json/OWASP_MASVS-*.json
            OWASP_MASVS-*.xml/OWASP_MASVS-*.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
